{"version":"NotebookV1","origId":354659799817994,"name":"gold_aggregates_for_ad_hoc_analysis","language":"sql","commands":[{"version":"CommandV1","origId":6866021157531672,"guid":"e7ae28a0-80c3-41ef-809b-990b58fe7e53","subtype":"command","commandType":"auto","position":100.0,"command":"-- Create gold schema if it doesn't exist\nCREATE SCHEMA IF NOT EXISTS youtube2.gold;\n\n-- Table 1: Comments by video\nCREATE OR REPLACE TABLE youtube2.gold.comments_by_video\n(\n    video_id STRING,\n    video_title STRING,\n    channel_name STRING,\n    date TIMESTAMP,\n    text STRING,\n    like_count INT,\n    reply_count FLOAT,\n    cluster_sentiment STRING,\n    ingestion_timestamp TIMESTAMP\n)\nUSING DELTA\nCOMMENT 'Gold table with comments aggregated by video';\n\nINSERT INTO youtube2.gold.comments_by_video\nSELECT\n    video_id,\n    video_title,\n    channel_name,\n    date,\n    text,\n    like_count,\n    reply_count,\n    cluster_sentiment,\n    ingestion_timestamp\nFROM youtube2.silver.cleaned_api_data\nORDER BY video_id, date;\n\n-- Table 2: Author details\nCREATE OR REPLACE TABLE youtube2.gold.author_details\n(\n    author STRING,\n    author_channel_url STRING,\n    author_profile_image_url STRING,\n    video_id STRING,\n    date TIMESTAMP,\n    text STRING,\n    like_count INT,\n    reply_count FLOAT,\n    ingestion_timestamp TIMESTAMP\n)\nUSING DELTA\nCOMMENT 'Gold table with author-specific details';\n\nINSERT INTO youtube2.gold.author_details\nSELECT\n    author,\n    author_channel_url,\n    author_profile_image_url,\n    video_id,\n    date,\n    text,\n    like_count,\n    reply_count,\n    ingestion_timestamp\nFROM youtube2.silver.cleaned_api_data\nORDER BY author, date;\n\n-- Table 3: Sentiment details\nCREATE OR REPLACE TABLE youtube2.gold.sentiment_details\n(\n    cluster_sentiment STRING,\n    cluster_sentiment_reasoning STRING,\n    video_id STRING,\n    text STRING,\n    date TIMESTAMP,\n    like_count INT,\n    reply_count FLOAT,\n    ingestion_timestamp TIMESTAMP\n)\nUSING DELTA\nCOMMENT 'Gold table with sentiment analysis details';\n\nINSERT INTO youtube2.gold.sentiment_details\nSELECT\n    cluster_sentiment,\n    cluster_sentiment_reasoning,\n    video_id,\n    text,\n    date,\n    like_count,\n    reply_count,\n    ingestion_timestamp\nFROM youtube2.silver.cleaned_api_data\nORDER BY cluster_sentiment, date;","commandVersion":7,"state":"input","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"tableResultSettingsMap":{},"nuid":"9cd3a6f9-19eb-43a2-b7cb-bdc47db6cee1"}],"dashboards":[],"guid":"27a8f45d-a385-4712-9579-c091647059e0","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"JUPYTER","environmentMetadata":{"client":"2","base_environment":""},"computePreferences":null,"inputWidgetPreferences":null}