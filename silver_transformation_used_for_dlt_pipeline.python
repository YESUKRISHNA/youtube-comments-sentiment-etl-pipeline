{"version":"NotebookV1","origId":354659799817993,"name":"silver_transformation_used_for_dlt_pipeline","language":"python","commands":[{"version":"CommandV1","origId":6866021157531668,"guid":"7b0c0ff3-28b1-49ae-a146-4dddaf38f9db","subtype":"command","commandType":"auto","position":1.0,"command":"import dlt\nfrom pyspark.sql.functions import round\nfrom pyspark.sql.types import StructType, StructField, StringType, TimestampType, IntegerType, FloatType\n\n# Define schema for consistency\nschema = StructType([\n    StructField(\"record_type\", StringType(), True),\n    StructField(\"author\", StringType(), True),\n    StructField(\"author_channel_url\", StringType(), True),\n    StructField(\"author_profile_image_url\", StringType(), True),\n    StructField(\"date\", TimestampType(), True),\n    StructField(\"like_count\", IntegerType(), True),\n    StructField(\"reply_count\", FloatType(), True),\n    StructField(\"text\", StringType(), True),\n    StructField(\"video_id\", StringType(), True),\n    StructField(\"cluster_sentiment\", StringType(), True),\n    StructField(\"cluster_sentiment_reasoning\", StringType(), True),\n    StructField(\"id\", StringType(), True),\n    StructField(\"creator\", StringType(), True),\n    StructField(\"video_title\", StringType(), True),\n    StructField(\"video_thumbnail_url\", StringType(), True),\n    StructField(\"channel_name\", StringType(), True),\n    StructField(\"ingestion_timestamp\", TimestampType(), True)\n])\n\n# Read bronze table as a streaming source\n@dlt.table(name=\"bronze_raw_api_data\")\ndef bronze_table():\n    return spark.readStream.format(\"delta\").table(\"youtube2.bronze.raw_api_data\")\n\n# Read bronze volume CSV files as a streaming source\n@dlt.table(name=\"bronze_volume_data\")\ndef bronze_volume():\n    return spark.readStream.format(\"csv\").option(\"header\", \"true\").schema(schema).load(\"/Volumes/youtube2/bronze/volume1/*.csv\")\n\n# Silver transformation: Union, clean, and enforce schema\n@dlt.table(\n    name=\"youtube2.silver.cleaned_api_data\",\n    comment=\"Silver table with cleaned and unioned data from bronze table and volume\",\n    table_properties={\"delta.feature.allowColumnDefaults\": \"enabled\"}\n)\ndef silver_table():\n    bronze_table_df = dlt.read_stream(\"bronze_raw_api_data\")\n    bronze_volume_df = dlt.read_stream(\"bronze_volume_data\")\n    \n    # Union data using UNION ALL equivalent\n    unioned_df = bronze_table_df.union(bronze_volume_df)\n    \n    # Clean data: Remove nulls from key columns, round reply_count to 2 decimal places\n    return (unioned_df\n            .filter(\"record_type IS NOT NULL AND author IS NOT NULL AND date IS NOT NULL AND text IS NOT NULL\")\n            .withColumn(\"reply_count\", round(\"reply_count\", 2))\n            .select(\n                \"record_type\", \"author\", \"author_channel_url\", \"author_profile_image_url\",\n                \"date\", \"like_count\", \"reply_count\", \"text\", \"video_id\",\n                \"cluster_sentiment\", \"cluster_sentiment_reasoning\", \"id\",\n                \"creator\", \"video_title\", \"video_thumbnail_url\", \"channel_name\",\n                \"ingestion_timestamp\"\n            ))","commandVersion":3,"state":"input","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"tableResultSettingsMap":{},"nuid":"321fe079-0912-4863-9aa6-6f71bb53d940"}],"dashboards":[],"guid":"035234a0-06d4-448b-8ce4-74d49917ac65","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"JUPYTER","environmentMetadata":{"client":"2","base_environment":""},"computePreferences":null,"inputWidgetPreferences":null}